name: Build and Push Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build Go Application
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      # Build the application
      - name: Build Go Application
        run: |
          go mod tidy
          go build -o app .

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build # Ensure this job runs after "build"

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Build the Docker image
      - name: Build Docker Image
        run: make image

  push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: [build, docker-build] # Ensure this job runs after "build" and "docker-build"

    # Only run for "push" events and on the owner repository, not for "pull_request"
    if: github.event_name == 'push' && github.repository_owner == 'rekzi'

    outputs:
      GITHUB_VERSION: ${{ env.VERSION }}

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Extract version from version file
      - name: Extract current version from VERSION
        run: echo "VERSION=$(cat VERSION | sed -e 's,.*/\(.*\),\1,;s/-snapshot$//')" >> $GITHUB_ENV

      # Build the Docker image
      - name: Build Docker Image
        run: |
          make image
          make image VERSION=${{ env.VERSION }} IMAGE_EXTRA_ARGS='--label "runnumber=${GITHUB_RUN_ID}"'

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Push the Docker image
      - name: Push Docker Image
        run: |
          make push
          make push VERSION=${{ env.VERSION }}

  github-release-bump-version:
    name: GitHub Release and Bump Version file
    runs-on: ubuntu-latest
    needs: push

    if: github.ref == 'refs/heads/master'

    env:
      GITHUB_VERSION: ${{ needs.push.outputs.GITHUB_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Create Release and Tag on GitHub
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ env.GITHUB_VERSION }}" \
            --title="${{ env.GITHUB_VERSION }}" \
            --repo="$GITHUB_REPOSITORY" \
            --target=master \
            --generate-notes

      # Increment the patch version and add the -snapshot suffix
      - name: Set next snapshot version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.GITHUB_VERSION }}"

          new_version="${major}.${minor}.$((patch+1))-snapshot"
          echo $new_version > VERSION.tmp && mv VERSION.tmp VERSION

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -am "chore: bump version to ${new_version}"
          git push origin master
